{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/OrdersPage/OrdersPage.js"],"names":["module","exports","Order","props","ingredients","controls","label","type","ingredientName","push","name","amount","ingredientsOutput","map","igValue","aIndex","findIndex","value","style","textTransform","display","padding","margin","border","className","classes","Number","parseFloat","price","toFixed","withErrorHandler","dispatch","useDispatch","onFetchOrders","useCallback","token","userId","actionCreators","ReduxLoading","useSelector","state","order","loading","ReduxOrders","orders","ReduxToken","auth","ReduxUserId","useEffect","Spinner","id","axios"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,MAAQ,uB,4ECuDXC,EApDD,SAACC,GAEd,IAAMC,EAAc,GACdC,EAAW,CACZ,CAAEC,MAAO,cAAUC,KAAM,SACzB,CAAED,MAAO,QAASC,KAAM,SACxB,CAAED,MAAO,MAAOC,KAAM,UACtB,CAAED,MAAO,aAASC,KAAM,SAG5B,IAAK,IAAIC,KAAkBL,EAAMC,YAChCA,EAAYK,KAAK,CAChBC,KAAMF,EACNG,OAAQR,EAAMC,YAAYI,KAI7B,IAAMI,EAAoBR,EAAYS,KAAI,SAAAC,GAEzC,IAAMC,EAASV,EAASW,WAAU,SAAAC,GAC9B,OAAQH,EAAQJ,OAASO,EAAMV,QAInC,OACE,uBAECW,MAAO,CACNC,cAAe,aACfC,QAAS,eACTC,QAAS,MACTC,OAAQ,QACRC,OAAQ,kBAPV,UAUElB,EAASU,GAAQT,MAVnB,KAU4BQ,EAAQH,OAVpC,MACMG,EAAQJ,SAcjB,OACE,sBAAKc,UAAWC,IAAQvB,MAAxB,UACC,gDAECU,EAED,uCAAS,iCAASc,OAAOC,WAAWxB,EAAMyB,OAAOC,QAAQ,KAAzD,kB,uCCOWC,uBA7CI,SAAA3B,GAMlB,IAAM4B,EAAWC,cAEXC,EAAgBC,uBAAa,SAACC,EAAOC,GAAR,OAAmBL,EAAUM,IAA2BF,EAAOC,MAAY,CAACL,IAEzGO,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,WAChDC,EAAcJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMG,UAC/CC,EAAaN,aAAY,SAAAC,GAAK,OAAIA,EAAMM,KAAKX,SAC7CY,EAAcR,aAAY,SAAAC,GAAK,OAAIA,EAAMM,KAAKV,UAIpDY,qBAAU,WAETf,EAAcY,EAAYE,KAEzB,CAACd,EAAeY,EAAYE,IAE9B,IAAIL,EAAU,KAKd,OAJIJ,IACHI,EAAU,cAACO,EAAA,EAAD,KAIV,gCACEP,EACAC,EAAY9B,KAAI,SAAA4B,GAAK,OACpB,cAAC,EAAD,CAECrC,YAAaqC,EAAMrC,YACnBwB,MAAOa,EAAMb,OAFRa,EAAMS,YAY2BC","file":"static/js/5.b1df2629.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst Order = (props) => {\n\n\tconst ingredients = [];\n\tconst controls = [\n\t\t\t\t\t\t{ label: 'sałata', type: 'salad'},\n\t\t\t\t\t\t{ label: 'bekon', type: 'bacon'},\n\t\t\t\t\t\t{ label: 'ser', type: 'cheese'},\n\t\t\t\t\t\t{ label: 'mięso', type: 'meat'},\n\t\t\t\t\t];\n\t\t\n\t\tfor (let ingredientName in props.ingredients){\n\t\t\tingredients.push({\n\t\t\t\tname: ingredientName, \n\t\t\t\tamount: props.ingredients[ingredientName]\n\n\t\t\t});\n\t\t}\n\tconst ingredientsOutput = ingredients.map(igValue => {\n\n\t\tconst aIndex = controls.findIndex(value =>{\n\t\t\t\t\t\treturn (igValue.name === value.type);\n\t\t\t\t\t});\n\n\n\t\treturn( \n\t\t\t\t<span \n\t\t\t\t\tkey={igValue.name} \n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\tpadding: '5px',\n\t\t\t\t\t\tmargin: '0 8px',\n\t\t\t\t\t\tborder: '1px solid #eee'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{controls[aIndex].label} ({igValue.amount})    \n\t\t\t\t</span>\n\t\t\t);\n\t})\n\n\treturn(\n\t\t\t<div className={classes.Order}>\n\t\t\t\t<p>Składniki:</p>  \n\n\t\t\t\t{ingredientsOutput}\n\t\t\t\t\n\t\t\t\t<p>Cena: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong> zł</p>\n\t\t\t</div>\n\t\t);\n\n}\n\nexport default Order;","import React, {useEffect, useCallback} from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport {useDispatch, useSelector} from 'react-redux';\nimport * as actionCreators from '../../store/actions/acIndex';\n\n// class OrdersPage extends Component{\n\nconst OrdersPage = props => {\n\t// const [loadingHook, loadingSetHook] = useState(true);\n\t// const [ordersHook, ordersSetHook] = useState([]);\n\t\n\t// HOOK BASE\n\n\tconst dispatch = useDispatch();\n\n\tconst onFetchOrders = useCallback( (token, userId) => dispatch( actionCreators.fetchOrders(token, userId) ) , [dispatch]);\n\n\tconst ReduxLoading = useSelector(state => state.order.loading);\n\tconst ReduxOrders = useSelector(state => state.order.orders);\n\tconst ReduxToken = useSelector(state => state.auth.token);\n\tconst ReduxUserId = useSelector(state => state.auth.userId);\n\n\t\n\n\tuseEffect(() => {\n\n\t\tonFetchOrders(ReduxToken, ReduxUserId);\n\t\t\n\t},[onFetchOrders, ReduxToken, ReduxUserId]); //like componentDidMount\n\t\n\tlet loading = null;\n\tif (ReduxLoading) {\n\t\tloading = <Spinner/>;\n\t}\n\t\n\treturn(\n\t\t<div>\n\t\t\t{loading}\n\t\t\t{ReduxOrders.map(order => (\n\t\t\t\t\t<Order \n\t\t\t\t\t\tkey={order.id}\n\t\t\t\t\t\tingredients={order.ingredients}\n\t\t\t\t\t\tprice={order.price}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default withErrorHandler(OrdersPage, axios) ;"],"sourceRoot":""}