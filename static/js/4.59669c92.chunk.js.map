{"version":3,"sources":["components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js"],"names":["module","exports","Auth","props","dispatch","useDispatch","ReduxSetAuthRedirectPath","useCallback","actions","redLoading","useSelector","state","auth","loading","redError","error","redAuth","token","redPathToRedirect","pathToRedirect","redBurgerWasBuild","burgerBuilder","itWasBuild","useState","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","controls","setControls","isSignup","setIsSignup","useEffect","submitHandler","event","preventDefault","onAuth","formElementArr","key","push","id","config","form","map","formElement","invalid","shouldValidate","changed","controlName","updatedControls","updateObject","target","checkValidtity","inputChangeHandler","label","authRedirect","to","errorMessage","response","data","message","className","classes","onSubmit","btnType","clicked","Input","inputElement","inputClasses","InputElement","Invalid","join","onChange","options","option","displayValue","validationErrorMessage","Error","Label"],"mappings":"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","file":"static/js/4.59669c92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"Error\":\"Input_Error__13mCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import React, {useState, useEffect, useCallback} from 'react';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport classes from './Auth.module.css';\n\nimport * as actions from '../../store/actions/acIndex';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {Redirect} from 'react-router-dom';\n\nimport { updateObject, checkValidtity } from '../../shared/utility';\n\n//class Auth extends Component {\nconst Auth = props => {\n\n\n\tconst dispatch = useDispatch();\n\n\tconst onAuth = (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup));\n\tconst ReduxSetAuthRedirectPath = useCallback( () => dispatch(actions.setAuthRedirectPath('/')) ,[dispatch]);\n\n\tconst redLoading = useSelector(state => state.auth.loading);\n\tconst redError = useSelector(state => state.auth.error);\n\tconst redAuth = useSelector(state => state.auth.token !== null);\n\tconst redPathToRedirect = useSelector(state => state.auth.pathToRedirect);\n\tconst redBurgerWasBuild = useSelector(state => state.burgerBuilder.itWasBuild);\n\t\n\tconst [controls, setControls] = useState({\n\t\temail: {\n\t\t\telementType: 'input',\n\t\t\telementConfig: {\n\t\t\t\ttype: 'email',\n\t\t\t\tplaceholder: 'Adres e-mail'\n\t\t\t},\n\t\t\tvalue: '',\n\t\t\tvalidation: {\n\t\t\t\trequired: true,\n\t\t\t\tisEmail: true\n\t\t\t},\n\t\t\tvalid: false,\n\t\t\ttouched: false\n\t\t},\n\t\tpassword: {\n\t\t\telementType: 'input',\n\t\t\telementConfig: {\n\t\t\t\ttype: 'password',\n\t\t\t\tplaceholder: 'Hasło'\n\t\t\t},\n\t\t\tvalue: '',\n\t\t\tvalidation: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 6\n\t\t\t},\n\t\t\tvalid: false,\n\t\t\ttouched: false\n\t\t}\n\t}); // controls:\n\tconst [isSignup, setIsSignup] = useState(true);\n\n\tuseEffect(() => {\n\t\tif (!redBurgerWasBuild && redPathToRedirect !== '/') {\n\t \t\tReduxSetAuthRedirectPath();\n\t \t}\n\t \t\n\t}, [redBurgerWasBuild, redPathToRedirect, ReduxSetAuthRedirectPath]);\n\t// componentDidMount() {\n\t// \tif (!this.props.redBurgerWasBuild && this.props.redPathToRedirect !== '/') {\n\t// \t\tthis.props.ReduxSetAuthRedirectPath();\n\t// \t}\n\t// }\n\n\t\n\n\tconst inputChangeHandler = (event, controlName) => {\n\t\t\n\t\t// const updatedControls = {\n\t\t// \t...this.state.controls,\n\t\t// \t[controlName]: {\n\t\t// \t\t...this.state.controls[controlName],\n\t\t// \t\tvalue: event.target.value,\n\t\t// \t\tvalid: this.checkValidtity(event.target.value, this.state.controls[controlName].validation),\n\t\t// \t\ttouched: true\n\t\t// \t}\n\n\t\t// }; \n\n\t\tconst updatedControls = updateObject(controls, {\n\t\t\t[controlName]: updateObject(controls[controlName],{\n\t\t\t\n\t\t\t\tvalue: event.target.value,\n\t\t\t\tvalid: checkValidtity(event.target.value, controls[controlName].validation),\n\t\t\t\ttouched: true\n\t\t\t})\n\t\t});\n\n\t\t// wewnętrzne obiekty są wskaźnikami trzeba klonować dalej\n\t\t// let formIsValid = true;\n\t\t// for (let indetifier in updatedControls){\n\t\t// \tformIsValid = (updatedControls[indetifier].valid && formIsValid);\n\t\t// }\n\n\t\t//this.setState({controls: updatedControls/*, formIsValid: formIsValid*/});\n\t\tsetControls(updatedControls);\n\t}\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tonAuth(controls.email.value, controls.password.value, isSignup);\n\n\n\t}\n\n\tconst switchAuthMod = () => {\n\t\tsetIsSignup(!isSignup)\n\t\t// this.setState(prevState => {\n\t\t// \treturn {isSignup: !prevState.isSignup}\n\t\t// });\n\t}\n\n\n\n\tconst formElementArr = [];\n\tfor (let key in controls){\n\t\tformElementArr.push({\n\t\t\tid: key,\n\t\t\tconfig: controls[key]\n\t\t});\n\t}\n\tlet form = formElementArr.map(formElement => (\n\t\t<Input \n\t\t\tkey={formElement.id}\n\t\t\telementType={formElement.config.elementType}\n\t\t\telementConfig={formElement.config.elementConfig}\n\t\t\tvalue={formElement.config.value}\n\t\t\tinvalid={!formElement.config.valid}\n\t\t\tshouldValidate={formElement.config.validation}\n\t\t\ttouched={formElement.config.touched}\n\t\t\tchanged={(event) => inputChangeHandler(event, formElement.id)}\n\t\t\tlabel={formElement.config.elementConfig.type === 'email' ? 'E-mail' : 'Hasło'}\n\t\t/>\n\n\t));\n\n\tlet authRedirect = null;\n\tif (redAuth){\n\t\tauthRedirect = <Redirect to={props.redPathToRedirect} />;\n\t};\n\n\tif (redLoading) {\n\t\tform = <Spinner/>;\n\t};\n\n\tlet errorMessage = null;\n\tif (redError) {\n\t\tif (redError.response){\n\n\t\t\tswitch (redError.response.data.error.message ) {\n\t\t\t\tcase 'EMAIL_NOT_FOUND': errorMessage = <p>E-mail nie odnaleziony</p>;\n\t\t\t\tbreak;\n\t\t\t\tcase 'INVALID_PASSWORD': errorMessage = <p>Błędne hasło</p>;\n\t\t\t\tbreak;\n\t\t\t\tcase 'EMAIL_EXISTS': errorMessage = <p>Jest już konto na podany mail</p>;\n\t\t\t\tbreak;\n\t\t\t\tdefault: errorMessage = <p>{redError.response.data.error.message}</p>; \n\t\t\t}//switch\n\n\t\t} else {\n\t\t\terrorMessage = <p>{redError.message}</p>;\t\n\t\t};\n\t\t\n\t};\n\n\treturn(\n\t\t<div className={classes.Auth}>\n\t\t\t{authRedirect}\n\t\t\t{errorMessage}\n\t\t\t<form onSubmit={(event) => submitHandler(event)}>\n\t\t\t\t{form}\n\t\t\t\t\n\t\t\t\t<Button btnType='Success'>{isSignup ? 'ZAREJESTRUJ' : 'ZALOGUJ'}</Button>\n\t\t\t</form>\n\t\t\t<Button \n\t\t\t\tbtnType='Danger'\n\t\t\t\tclicked={switchAuthMod}>\n\t\t\t\t\tZmień na {isSignup ? 'Zaloguj' : 'Zarejestruj'}\n\t\t\t</Button>\n\t\t</div>\n\t);\n\t\n};\n\n\n\nexport default Auth;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst Input = (props) => {\n\n\tlet inputElement = null;\n\n\tconst inputClasses = [classes.InputElement]\n\n\tif (props.invalid && props.shouldValidate && props.touched) {\n\t\tinputClasses.push(classes.Invalid)\n\t}\n\n\tswitch (props.elementType){\n\t\tcase('input'):\n\t\t\tinputElement = <input \n\t\t\t\t\t\tclassName={inputClasses.join(' ')} \n\t\t\t\t\t\tonChange={props.changed}\n\t\t\t\t\t\t{...props.elementConfig} \n\t\t\t\t\t\tvalue={props.value}/>;\n\t\tbreak;\n\t\tcase('textarea'):\n\t\t\tinputElement = <textarea \n\t\t\t\t\t\tclassName={inputClasses.join(' ')} \n\t\t\t\t\t\tonChange={props.changed}\n\t\t\t\t\t\t{...props.elementConfig} \n\t\t\t\t\t\tvalue={props.value}/>;\n\t\tbreak;\n\t\tcase('select'):\n\t\t\tinputElement = (<select \n\t\t\t\t\t\t\t\tclassName={inputClasses.join(' ')} \n\t\t\t\t\t\t\t\tonChange={props.changed}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvalue={props.value}>\n\t\t\t\t\t\t\t\t{props.elementConfig.options.map(option => (\n\t\t\t\t\t\t\t\t\t<option key={option.value} value={option.value}>\n\t\t\t\t\t\t\t\t\t\t{option.displayValue}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</select>);\n\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input \n\t\t\t\t\t\tclassName={inputClasses.join(' ')} \n\t\t\t\t\t\tonChange={props.changed}\n\t\t\t\t\t\t{...props.elementConfig} \n\t\t\t\t\t\tvalue={props.value}/>;\n\t} // switch\n\n\t\tlet validationErrorMessage = null;\n\t\tif (props.invalid && props.touched) {\n\t\t\tvalidationErrorMessage = <p className={classes.Error}>Wprowadź poprawne dane warość {props.elementConfig.type === 'password' ? 'hasła' : props.value} jest nieprawidłowa</p>\n\t\t}\n\n\t\treturn(\n\t\t\t<div className={classes.Input}>\n\t\t\t\t<label className={classes.Label}>{props.label}</label>\n\t\t\t\t{validationErrorMessage}\n\t\t\t\t{inputElement}\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t};\n\n\nexport default Input;"],"sourceRoot":""}